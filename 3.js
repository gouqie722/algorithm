// 二叉树
// 1. 没有子节点的节点叫做叶子节点
// 概念：
// 满二叉树：
// 1. 所有的叶子节点都在最底层
// 2. 每个节点都有两个子节点

// 完全二叉树：
// 国内定义: 
// 1. 叶子节点都在最后一层或者倒数第二层
// 2. 叶子节点都向左聚拢
// 国际定义:
// 1. 叶子节点都在最后一层或者倒数第二层
// 2. 如果有叶子节点，就必然有两个叶子节点

// 子数:
// 二叉树中，每一个节点或叶子节点，都是一颗子数的根节点

// 二叉树的遍历
// 前序遍历: (先根次序遍历) 先打印当前的，再打印左边的，再打印右边的
// 中序遍历: (中根次序遍历) 先打印左边的，再打印当前的，再打印右边的
// 后序遍历: (后根次序遍历) 先打印左边的，再打印右边的，在打印当前的


function Node(value) {
  this.value = value
  this.left = null
  this.right = null
}


